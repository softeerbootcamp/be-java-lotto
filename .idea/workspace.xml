<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="75cfef9c-bc50-442b-99d5-2d9016fefebb" name="Changes" comment="refactor: 1000원 미만 금액 투입에 대한 예외처리를 Statistic 객체로 이동.&#10;[당첨 번호 입력] -&gt; [통계 출력]&#10;의 과정을 가독성을 위해 &#10;1. 당첨 번호와 입력된 Lotto 비교&#10;2. 통계 생성&#10;으로 나누었습니다.">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/kr/codesquad/domain/Rank.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/kr/codesquad/domain/Rank.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Enum" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectId" id="2JX36oPCnvQiefE3cZVtAUCgNFD" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "WebServerToolWindowFactoryState": "false",
    "node.js.selected.package.tslint": "(autodetect)",
    "settings.editor.selected.configurable": "preferences.lookFeel",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager">
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="kr.codesquad.Main" />
      <module name="java-lotto.main" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="kr.codesquad.domain.Row" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Main" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="75cfef9c-bc50-442b-99d5-2d9016fefebb" name="Changes" comment="" />
      <created>1672210428730</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1672210428730</updated>
      <workItem from="1672210432725" duration="156000" />
    </task>
    <task id="LOCAL-00001" summary="update .gitignore">
      <created>1672709330063</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1672709330063</updated>
    </task>
    <task id="LOCAL-00002" summary="feat: Rank enum 생성, 클래스 formatting, 간단한 오타 수정">
      <created>1672711035527</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1672711035527</updated>
    </task>
    <task id="LOCAL-00003" summary=".gitignore 원상복귀">
      <created>1672711101756</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1672711101756</updated>
    </task>
    <task id="LOCAL-00004" summary="feat: Row values print 기능 추가">
      <created>1672711471964</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1672711471964</updated>
    </task>
    <task id="LOCAL-00005" summary="refactor: Row class 필드명 result -&gt; match 수정, 수익률 소수점 두자리 출력">
      <created>1672712315487</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1672712315487</updated>
    </task>
    <task id="LOCAL-00006" summary="fix: 오타 수정, Rank enum 필드값 final 처리">
      <created>1672713079777</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1672713079777</updated>
    </task>
    <task id="LOCAL-00007" summary="refactor: 컨트롤러와 서비스 레벨을 두어 계층적으로 처리하도록 구조 수정">
      <created>1672716983297</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1672716983297</updated>
    </task>
    <task id="LOCAL-00008" summary="fix: 랜덤 로또번호 발급방식 shuffle()과 sort()를 활용하는 걸로 수정">
      <created>1672722082818</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1672722082818</updated>
    </task>
    <task id="LOCAL-00009" summary="refactor: enum을 적용하여 전체 값 조회 및 통계치 계산">
      <created>1672723126638</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1672723126638</updated>
    </task>
    <task id="LOCAL-00010" summary="feat: bonus 기능 추가">
      <created>1672726066242</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1672726066242</updated>
    </task>
    <task id="LOCAL-00011" summary="fix: 당첨 통계 reverse order로 출력">
      <created>1672726285377</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1672726285377</updated>
    </task>
    <task id="LOCAL-00012" summary="refactor: Enum 메서드 depth 1 만족할수있도록 수정중 (미완)">
      <created>1672731259316</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1672731259316</updated>
    </task>
    <task id="LOCAL-00013" summary="refactor: Enum 메서드 depth 1 만족할수있도록 수정&#10;&#10;예시 코드로 주어진 valueOf() 의 depth를 1로 낮추되 전체적인 구조를 망가뜨리지 않도록 수정하였습니다.&#10;수정 결과, Enum 중 하나를 반화하는 valueOf() 대신 금액을 반환하는 하나의 메서드로 처리하였습니다.&#10;하지만 그 과정에서 Rank를 금액 기준으로 count 등 처리를 하다보니 winningMoney 필드에 대한 의존도가 높아져 만약 동일한 금액의 Enum이 추가되면 문제가 발생할 위협이 있습니다.">
      <created>1672734191273</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1672734191273</updated>
    </task>
    <task id="LOCAL-00014" summary="feat: 입출력을 담당하는 View 추가&#10;&#10;View를 추가하여 입출력을 처리하고, Controller에 해당 값을 넘겨주고,&#10;Controller가 Service를 호출하여 결과값을 View에 다시 반환하여 출력하는 형태로 수정함.&#10;&#10;이를 위해 View는 Controller를, Controller는 Service를 생성자 주입하여 변경되지 않도록 함.&#10;&#10;View와 Controller 기능이 아직 깔끔히 분리되지 못하여 추가적으로 refactoring 에정.">
      <created>1672736066502</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1672736066502</updated>
    </task>
    <task id="LOCAL-00015" summary="refactor: 당첨 통계 View 단에서 출력될 수 있도록 간단히 수정함.">
      <created>1672736908881</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1672736908881</updated>
    </task>
    <task id="LOCAL-00016" summary="rafactor: 로또 생성 기능을 interface한 LottoGenerator와 이를 implements하는 AutoLottoGenerator로 분리 &#10;&#10;## Why?&#10;step3 수동 로또 생성 요구조건을 만족하기 위함과 확장에 용이하도록 역할을 interface로 분리할 필요를 느낌.&#10;## How?&#10;interface를 구현하고 이를 상속받도록 함.&#10;## Anything Else?&#10;DI를 적극적으로 활용하여 Service나 Controller에 집중된 책임을 분산시킬 수 있도록 고려해야 함.&#10;## todo&#10;LottoGenerator를 구현하는 ManualLottoGenerator 생성 예정">
      <created>1672797487638</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1672797487638</updated>
    </task>
    <task id="LOCAL-00017" summary="rafactor: 도메인 패키지에 구조 변경, 당첨 번호 정보를 가지는 WinningNumbers 클래스 생성, Row 클래스에 createRow static 메서드 추가&#10;&#10;## Why?&#10;우선 당첨 정보가 여러 객체에서 중복적으로 사용되고 있으며, 당첨번호와 보너스 숫자가 분리되어 있어 가독성 및 유지보수가 떨어져 별도의 클래스 필요.&#10;도메인이 많아짐에 따라 도메인을 따로 패키지로 빼는 것이 좋을 것 같다고 판단.">
      <created>1672799602561</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1672799602561</updated>
    </task>
    <task id="LOCAL-00018" summary="rafactor: 로또 게임에 대한 정보를 담고 있는 Lotto 클래스, 당첨 번호와 보너스 숫자를 가진 WinningNumbers 도메인으로 책임을 분산&#10;&#10;## why&#10;로또 프로그램은 총 두 개의 로직, &#10;[금액 투입 -&gt; 로또 발급]&#10;[당첨번호 투입 -&gt; 통계 출력]&#10;이 필요한데 현재 구조로는 두 로직 사이에 전달되어야 할 데이터를 효과적으로 주고받지 못한다고 생각되었으며, 그 문제점이 도메인이 아닌 LottoService, LottoController를 두고 필요한 로직을 구현하였기 때문이라 생각되었습니다. 따라서 도메인 주도 설계로 전환하고자 노력하였습니다.&#10; &#10;## todo&#10;최대한 getter &amp; setter 및 Collection이 노출되지 않도록 클래스를 더욱 더 세분화할 계획이며, 도메인 주도 모델링으로 바꾸어 나갈 예정입니다.&#10;또한, Rank enum을 참고 자료를 활용하여 방식을 바꾸어 나갈 예정입니다.">
      <created>1672819908607</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1672819908607</updated>
    </task>
    <task id="LOCAL-00019" summary="refactor: LottoService 삭제&#10;&#10;## why&#10;불필요한 서비스 계층을 두지 않고 도메인 내에서 문제를 해결하고자 LottoService는 삭제하였으며 Controller에서 도메인에 구현된 메서드를 callback하여 로직을 해결하고자 하였습니다.&#10;이에 따라 전체 구조를&#10;[starter] -&gt; [viewer] &lt;-&gt; [contoller]&#10;로 변경하였습니다.">
      <created>1672820415832</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1672820415832</updated>
    </task>
    <task id="LOCAL-00020" summary="refactor: 구매한 total Lotto 출력 메서드를 Lotto 클래스 내로 옮김.">
      <created>1672820668437</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1672820668437</updated>
    </task>
    <task id="LOCAL-00021" summary="refactor: 1000원 미만 금액 투입에 대한 예외처리를 Statistic 객체로 이동.&#10;[당첨 번호 입력] -&gt; [통계 출력]&#10;의 과정을 가독성을 위해 &#10;1. 당첨 번호와 입력된 Lotto 비교&#10;2. 통계 생성&#10;으로 나누었습니다.">
      <created>1672822198757</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1672822198757</updated>
    </task>
    <option name="localTasksCounter" value="22" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="update .gitignore" />
    <MESSAGE value="feat: Rank enum 생성, 클래스 formatting, 간단한 오타 수정" />
    <MESSAGE value=".gitignore 원상복귀" />
    <MESSAGE value="feat: Row values print 기능 추가" />
    <MESSAGE value="refactor: Row class 필드명 result -&gt; match 수정, 수익률 소수점 두자리 출력" />
    <MESSAGE value="fix: 오타 수정, Rank enum 필드값 final 처리" />
    <MESSAGE value="refactor: 컨트롤러와 서비스 레벨을 두어 계층적으로 처리하도록 구조 수정" />
    <MESSAGE value="fix: 랜덤 로또번호 발급방식 shuffle()과 sort()를 활용하는 걸로 수정" />
    <MESSAGE value="refactor: enum을 적용하여 전체 값 조회 및 통계치 계산" />
    <MESSAGE value="feat: bonus 기능 추가" />
    <MESSAGE value="fix: 당첨 통계 reverse order로 출력" />
    <MESSAGE value="refactor: Enum 메서드 depth 1 만족할수있도록 수정중 (미완)" />
    <MESSAGE value="refactor: Enum 메서드 depth 1 만족할수있도록 수정&#10;&#10;예시 코드로 주어진 valueOf() 의 depth를 1로 낮추되 전체적인 구조를 망가뜨리지 않도록 수정하였습니다.&#10;수정 결과, Enum 중 하나를 반화하는 valueOf() 대신 금액을 반환하는 하나의 메서드로 처리하였습니다.&#10;하지만 그 과정에서 Rank를 금액 기준으로 count 등 처리를 하다보니 winningMoney 필드에 대한 의존도가 높아져 만약 동일한 금액의 Enum이 추가되면 문제가 발생할 위협이 있습니다." />
    <MESSAGE value="feat: 입출력을 담당하는 View 추가&#10;&#10;View를 추가하여 입출력을 처리하고, Controller에 해당 값을 넘겨주고,&#10;Controller가 Service를 호출하여 결과값을 View에 다시 반환하여 출력하는 형태로 수정함.&#10;&#10;이를 위해 View는 Controller를, Controller는 Service를 생성자 주입하여 변경되지 않도록 함.&#10;&#10;View와 Controller 기능이 아직 깔끔히 분리되지 못하여 추가적으로 refactoring 에정." />
    <MESSAGE value="refactor: 당첨 통계 View 단에서 출력될 수 있도록 간단히 수정함." />
    <MESSAGE value="rafactor: 로또 생성 기능을 interface한 LottoGenerator와 이를 implements하는 AutoLottoGenerator로 분리 &#10;&#10;## Why?&#10;step3 수동 로또 생성 요구조건을 만족하기 위함과 확장에 용이하도록 역할을 interface로 분리할 필요를 느낌.&#10;## How?&#10;interface를 구현하고 이를 상속받도록 함.&#10;## Anything Else?&#10;DI를 적극적으로 활용하여 Service나 Controller에 집중된 책임을 분산시킬 수 있도록 고려해야 함.&#10;## todo&#10;LottoGenerator를 구현하는 ManualLottoGenerator 생성 예정" />
    <MESSAGE value="rafactor: 도메인 패키지에 구조 변경, 당첨 번호 정보를 가지는 WinningNumbers 클래스 생성, Row 클래스에 createRow static 메서드 추가&#10;&#10;## Why?&#10;우선 당첨 정보가 여러 객체에서 중복적으로 사용되고 있으며, 당첨번호와 보너스 숫자가 분리되어 있어 가독성 및 유지보수가 떨어져 별도의 클래스 필요.&#10;도메인이 많아짐에 따라 도메인을 따로 패키지로 빼는 것이 좋을 것 같다고 판단." />
    <MESSAGE value="rafactor: 로또 게임에 대한 정보를 담고 있는 Lotto 클래스, 당첨 번호와 보너스 숫자를 가진 WinningNumbers 도메인으로 책임을 분산&#10;&#10;## why&#10;로또 프로그램은 총 두 개의 로직, &#10;[금액 투입 -&gt; 로또 발급]&#10;[당첨번호 투입 -&gt; 통계 출력]&#10;이 필요한데 현재 구조로는 두 로직 사이에 전달되어야 할 데이터를 효과적으로 주고받지 못한다고 생각되었으며, 그 문제점이 도메인이 아닌 LottoService, LottoController를 두고 필요한 로직을 구현하였기 때문이라 생각되었습니다. 따라서 도메인 주도 설계로 전환하고자 노력하였습니다.&#10; &#10;## todo&#10;최대한 getter &amp; setter 및 Collection이 노출되지 않도록 클래스를 더욱 더 세분화할 계획이며, 도메인 주도 모델링으로 바꾸어 나갈 예정입니다.&#10;또한, Rank enum을 참고 자료를 활용하여 방식을 바꾸어 나갈 예정입니다." />
    <MESSAGE value="refactor: LottoService 삭제&#10;&#10;## why&#10;불필요한 서비스 계층을 두지 않고 도메인 내에서 문제를 해결하고자 LottoService는 삭제하였으며 Controller에서 도메인에 구현된 메서드를 callback하여 로직을 해결하고자 하였습니다.&#10;이에 따라 전체 구조를&#10;[starter] -&gt; [viewer] &lt;-&gt; [contoller]&#10;로 변경하였습니다." />
    <MESSAGE value="refactor: 구매한 total Lotto 출력 메서드를 Lotto 클래스 내로 옮김." />
    <MESSAGE value="refactor: 1000원 미만 금액 투입에 대한 예외처리를 Statistic 객체로 이동.&#10;[당첨 번호 입력] -&gt; [통계 출력]&#10;의 과정을 가독성을 위해 &#10;1. 당첨 번호와 입력된 Lotto 비교&#10;2. 통계 생성&#10;으로 나누었습니다." />
    <option name="LAST_COMMIT_MESSAGE" value="refactor: 1000원 미만 금액 투입에 대한 예외처리를 Statistic 객체로 이동.&#10;[당첨 번호 입력] -&gt; [통계 출력]&#10;의 과정을 가독성을 위해 &#10;1. 당첨 번호와 입력된 Lotto 비교&#10;2. 통계 생성&#10;으로 나누었습니다." />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/java_lotto$Main.ic" NAME="Main Coverage Results" MODIFIED="1672722343647" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false">
      <FILTER>kr.codesquad.*</FILTER>
    </SUITE>
  </component>
</project>